#pragma once

#define SHADOWBOOT_SIZE 0xD0000
#define FLASH_NONCE_SIZE 0x10

const BYTE _1BL_KEY[] = { 0xDD, 0x88, 0xAD, 0x0C, 0x9E, 0xD6, 0x69, 0xE7, 0xB5, 0x67, 0x94, 0xFB, 0x68, 0x56, 0x3E, 0xFA };

namespace Shadowboot {
	typedef struct _LAUNCH_SHADOWBOOT_ARGS {
		PBYTE pbData;
		DWORD dwSize;
	} LAUNCH_SHADOWBOOT_ARGS, * PLAUNCH_SHADOWBOOT_ARGS;

	typedef enum PATCH_SHADOWBOOT_STATUS : DWORD {
		SUCCESS = 0,
		INVALID_SB_HEADER,
		INVALID_SC_HEADER,
		INVALID_SD_HEADER,
		INVALID_SE_HEADER,
		INVALID_SB_VERSION,
		INVALID_SC_VERSION,
		INVALID_SD_VERSION,
		INVALID_SE_VERSION,
		INVALID_SB_SIGNATURE,
		INVALID_SC_SIGNATURE,
		INVALID_SD_SIGNATURE,
		INVALID_SE_DIGEST,
		INVALID_SB_CHECKSUM,
		INVALID_SD_CHECKSUM,
		INVALID_SE_CHECKSUM,
	};
}

void CreateShadowbootThread(LPCSTR lpFilename);